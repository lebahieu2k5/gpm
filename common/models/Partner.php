<?php

namespace common\models;

use Yii;
use yii\web\UploadedFile;

/**
 * This is the model class for table "partner".
 *
 * @property int $id
 * @property string $name
 * @property string $image
 * @property string $url
 * @property string $brief
 * @property int $position
 * @property int $ord
 * @property int $active
 * @property int $lang_id
 */
class Partner extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    const PARTNER = 1;
    const ADS1 = 2;
    const ADS2 = 3;
    const ADS3 = 4;

    public static function tableName()
    {
        return 'partner';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['position', 'name'], 'required'],
            [['image', 'url','brief'], 'string'],
            [['position', 'ord', 'active', 'lang_id'], 'integer'],
            [['name'], 'string', 'max' => 200],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Tên đối tác',
            'image' => 'Ảnh',
            'url' => 'Đường dẫn',
            'position' => 'Vị trí',
            'ord' => 'Thứ tự',
            'active' => 'Hoạt động',
            'lang_id' => 'Lang ID',
            "brief"=>'Mô tả'
        ];
    }

    public static function getPosition()
    {
        return [
            self::PARTNER => 'Đối tác',
            self::ADS1 => 'Đoạn giới thiệu',
            self::ADS2 => 'Đoạn giới thiệu 2',
            self::ADS3 => 'Dịch vụ của chúng tôi',
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {


        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function afterDelete()
    {
        $path = dirname(dirname(__DIR__)) . '/images/partner/' . $this->image;
        if (is_file($path))
            unlink($path);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }

    public static function getAds($position,$limit)
    {
        $ads = self::find()->where(['position' => $position, 'active' => 1])->orderBy(['ord' => SORT_ASC])->limit($limit)->all();
        return $ads;
    }


    public  static function getPartner($pos)
    {
        return self::find()->where(['position' => $pos, 'active' => 1])->orderBy(['id' => SORT_ASC])->all();
    }
}