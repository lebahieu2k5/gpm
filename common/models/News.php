<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "news".
 *
 * @property int $id
 * @property string $title
 * @property string $image
 * @property string $url
 * @property string $brief
 * @property string $content
 * @property string $posted_date
 * @property int $hot
 * @property int $home
 * @property int $active
 * @property int $luotxem
 * @property string $tags
 * @property string $seo_title
 * @property string $seo_keyword
 * @property string $seo_desc
 * @property int $lang_id
 * @property int $cat_new_id
 *
 * @property Catnew $catNew
 * @property TagsNews[] $tagsNews
 */
class News extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['image', 'url', 'content', 'tags'], 'string'],
            [['hot', 'home', 'active', 'luotxem', 'lang_id', 'cat_new_id'], 'integer'],
            [['cat_new_id'], 'required'],
            [['title', 'seo_title', 'seo_keyword', 'seo_desc'], 'string', 'max' => 200],
            [['brief'], 'string'],
//            [['brief'], 'string', 'max' => 250],
            [['posted_date'], 'string', 'max' => 45],
            [['cat_new_id'], 'exist', 'skipOnError' => true, 'targetClass' => Catnew::className(), 'targetAttribute' => ['cat_new_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'image' => 'Image',
            'url' => 'Url',
            'brief' => 'Brief',
            'content' => 'Content',
            'posted_date' => 'Posted Date',
            'hot' => 'Hot',
            'home' => 'Home',
            'active' => 'Active',
            'luotxem' => 'Luotxem',
            'tags' => 'Tags',
            'seo_title' => 'Seo Title',
            'seo_keyword' => 'Seo Keyword',
            'seo_desc' => 'Seo Desc',
            'lang_id' => 'Người đăng',
            'cat_new_id' => 'Cat New ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCatNew()
    {
        return $this->hasOne(Catnew::className(), ['id' => 'cat_new_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTagsNews()
    {
        return $this->hasMany(TagsNews::className(), ['news_id' => 'id']);
    }
    public function afterDelete()
    {
        $path =dirname(dirname(__DIR__)).'/images/news/'.$this->image;
        if (is_file($path))
            unlink($path);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
    public static function getNew(){
        return self::find()->where(['active'=>1])->limit(4)->all();
    }

    public static function getNews()
    {
        return self::find()->where(['active'=>1, 'home'=>1, 'hot'=>1])->all();
    }

    public static function getHomeNews($num){
        return self::find()->where(['active'=>1, 'home'=>1, 'hot'=>1])->limit($num)->all();
    }
   public function beforeSave($insert)
   {
       if($this->isNewRecord){
           $this->lang_id=Yii::$app->user->identity->id;
       }
       return parent::beforeSave($insert); // TODO: Change the autogenerated stub
   }
   public function getUrl(){
//        danh muc -> tin tuc=> tin tuc co danh muc _id => truy xuat danh mucục: tintuc->danhmuc, danhmuc->tintuc (1 mang cac phan tu tin tuc co danh muc_id = danhmuc->id)
        return Yii::$app->urlManager->createUrl(['site/news','catname'=>\func::taoduongdan($this->catNew->name),'url'=>$this->url,'id'=>$this->id]);
   }
}
