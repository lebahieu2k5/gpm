<?php

namespace common\models;

use Yii;
use yii\db\Expression;
use yii\web\UploadedFile;

/**
 * This is the model class for table "picture".
 *
 * @property int $id
 * @property string $name
 * @property string $image
 * @property string $posted_date
 * @property int $home
 * @property int $ord
 * @property int $album_id
 *
 * @property Album $album
 * @property TagsPicture[] $tagsPictures
 */
class Picture extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'picture';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['image','name'], 'string'],
            [['home', 'ord', 'album_id'], 'integer'],
            [['album_id'], 'required'],
            [['posted_date'], 'string', 'max' => 45],
            [['album_id'], 'exist', 'skipOnError' => true, 'targetClass' => Album::className(), 'targetAttribute' => ['album_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'image' => 'Ảnh',
            'name' => 'Tên ảnh',
            'posted_date' => 'Ngày lập',
            'home' => 'Trang chủ',
            'ord' => 'Thứ tự',
            'album_id' => 'Album',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAlbum()
    {
        return $this->hasOne(Album::className(), ['id' => 'album_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTagsPictures()
    {
        return $this->hasMany(TagsPicture::className(), ['picture_id' => 'id']);
    }
    public function beforeSave($insert)
    {
        if ($this->isNewRecord)
            $this->posted_date= new Expression('NOW()');

        $file = UploadedFile::getInstanceByName('imagepicture');
        if (!is_null($file)) {
            $this->image = '/images/picture/' . \func::taoduongdan(time() . "-" . $file->name);
            $path = dirname(dirname(__DIR__)) . $this->image;
            $file->saveAs($path);
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterDelete()
    {
        $path = dirname(dirname(__DIR__)) . '/images/picture/' . $this->image;
        if (is_file($path))
            unlink($path);
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}
